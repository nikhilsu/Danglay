var directionsService, directionsDisplay, map;
var data = {};

var CabPoolListener = {
  addListeners: function () {
    var select_tag = $('div.localityForm').html();
    $('div.localityForm:first').remove();
    addASelectizedFormGroup(select_tag);
    $('#addLocality').click(function () {
      addASelectizedFormGroup(select_tag);
      return false;
    });

    $("div#localitySelections").on('click', '#removeNewLocality', function () {
      $(this).closest('.form-group').remove();
      var number_of_locality_forms = $("div.localityForm").length;
      var add_locality_count = $("#addLocality").length;
      if (number_of_locality_forms <= 4 && $('#addLocality').is(':hidden')) {
        $('#addLocality').show();
      }
      update_map();
      return false;
    });

    $('#sourceLocation').change(function () {
      data.source = $('#sourceLocation :selected').text() + " Bangalore, Karnataka ";
      displayRoute(data.source, data.destination, directionsService, directionsDisplay);
    });
    $('#sourceLocation').selectize();

    $(function () {
      $("#cabpool_type").change(function () {
        if ($('#cabpool_type :selected').text() == ("Company provided Cab")) {
          $('.hideable').addClass('hidden');
          $('#submit_button').val("Request creation of Pool");
          $('#create-cabpool-heading').text("Request for a Cab Pool");
          initMap();
        }
        else {
          $('.hideable').removeClass('hidden');
          $('#submit_button').val("Create a Pool");
          $('#create-cabpool-heading').text("Create a Cab Pool");
        }
      });
    });
  }
};

var addASelectizedFormGroup = function (select_tag) {
  var number_of_locality_forms = $("div.localityForm").length;
  if (number_of_locality_forms <= 3) {
    var locality_form_with_remove_icon = '<div class="form-group"> ' +
        '<div class="localityForm">' + select_tag + '</div> ' +
        '<button id="removeNewLocality" class ="hideable">-</button> ' +
        '</div>';
    $('div#localitySelections').append(locality_form_with_remove_icon);
    var select_the_last_locality_form = $('div.localityForm:last > select');
    select_the_last_locality_form.change(update_map);
    select_the_last_locality_form.attr('name', 'localities[' + $.now() + ']');
    select_the_last_locality_form.selectize();
    if (number_of_locality_forms == 3) {
      $('#addLocality').hide();
    }
  }
};

var update_map = function () {
  var viaLocations = document.getElementsByClassName('form-control selectized add-locality');
  data.waypoints = [];
  for (var counter = 0; counter < viaLocations.length; counter++) {
    if (viaLocations[counter].textContent != "") {
      var address = viaLocations[counter].textContent + ' Bengaluru, Karnataka';
      var geocoder = new google.maps.Geocoder();
      geocoder.geocode({'address': address}, geocodeCallback);
    }
  }
  setroute();
};

var geocodeCallback = function (results, status) {
  if (status === google.maps.GeocoderStatus.OK) {
    data.waypoints.push([results[0].geometry.location.lat(), results[0].geometry.location.lng()]);
    setroute();
  }
  else {
    alert('Geocode was not successful for the following reason: ' + status);
  }
};

$(document).ready(function () {
  CabPoolListener.addListeners();
  CabPoolListenerPassenger.addListeners();
  $('#localities_search').selectize();
});

$(document).on('page:load', function () {
  CabPoolListener.addListeners();
  CabPoolListenerPassenger.addListeners();
  $('#localities_search').selectize();

});

function initMap() {
  map = new google.maps.Map(document.getElementById('map'), {
    zoom: 14,
    scrollwheel: false,
    center: {lat: 12.9287258, lng: 77.6267284}
  });
  directionsService = new google.maps.DirectionsService;
  directionsDisplay = new google.maps.DirectionsRenderer({
    map: map
  });

  data = {};
  if (document.getElementById("locality") != null) {
    data.source = document.getElementById("locality").textContent + " Bangalore, Karnataka ";
  }
  data.destination = {lat: 12.9287258, lng: 77.6267284};
  displayRoute(data.source, data.destination, directionsService, directionsDisplay);

  directionsDisplay.addListener('directions_changed', function () {
    updateWaypoints();
  });
}

function displayRoute(origin, destination, service, display) {
  service.route({
    origin: origin,
    destination: destination,
    travelMode: google.maps.TravelMode.DRIVING,
    transitOptions: {
      routingPreference: google.maps.TransitRoutePreference.FEWER_TRANSFERS
    },
    optimizeWaypoints: true,
    avoidTolls: true
  }, function (response, status) {
    if (status === google.maps.DirectionsStatus.OK) {
      display.setDirections(response);
    } else {
      alert('Could not display directions due to: ' + status);
    }
  });
}

function updateWaypoints() {
  var JSON_STRING = JSON.stringify(data);
  document.getElementById('cabpool_route').value = JSON_STRING;
}

function initMap_show(element, scrollWheel) {
  var a_map, route;
  if (!element) {
    a_map = document.getElementById('map');
    route = document.getElementById('route');
    scrollWheel = false;
  }
  else {
    a_map = element.find('#map')[0];
    route = element.find('#route')[0];
  }
  if (route.value != "") {
    data = JSON.parse(route.value);
    if (!data.hasOwnProperty('waypoints')) {
      data.waypoints = [];
    }
    var zoom_level = 14;
    setMap(a_map, zoom_level, scrollWheel);
  }
}

function setroute_and_show_distance(a_map) {
  var wp = [];
  for (var i = 0; i < data.waypoints.length; i++) {
    wp[i] = {'location': new google.maps.LatLng(data.waypoints[i][0], data.waypoints[i][1]), 'stopover': true}
  }

  var total_distance = 0;
  var total_duration = 0;

  function roundOffToFirstDecimalPlace(decimalNumber) {
    decimalNumber = Math.round(decimalNumber * 10);
    decimalNumber = decimalNumber / 10;
    return decimalNumber;
  }

  directionsService.route({
    'origin': data.source,
    'destination': data.destination,
    'waypoints': wp,
    'travelMode': google.maps.DirectionsTravelMode.DRIVING,
    transitOptions: {
      routingPreference: google.maps.TransitRoutePreference.FEWER_TRANSFERS
    },
    optimizeWaypoints: true
  }, function (response, status) {
    if (status === google.maps.DirectionsStatus.OK) {
      directionsDisplay.setDirections(response);

      var route = response.routes[0];
      for (var i = 0; i < route.legs.length; i++) {
        total_distance += (route.legs[i].distance.value) / 1000;
        total_duration += (route.legs[i].duration.value) / 60;
      }

      var routeInfoStringToBeDisplayed = "";

      if (total_distance != 0) {
        total_distance = roundOffToFirstDecimalPlace(total_distance);
        total_duration = roundOffToFirstDecimalPlace(total_duration)
        routeInfoStringToBeDisplayed = "<span>Total Distance : " + total_distance + " kms<br/></span>";
        routeInfoStringToBeDisplayed += "<span>Approximate Time : " + total_duration + " mins</span>";
      }

      var elementNodeOfMap = a_map.parentNode;
      var divToShowRouteInfo = elementNodeOfMap.getElementsByClassName('route-info')[0];
      if (divToShowRouteInfo)
        divToShowRouteInfo.innerHTML = routeInfoStringToBeDisplayed;

    } else {
      alert('Could not display directions due to: ' + status);
    }
  });
}

function setroute() {
  var wp = [];
  for (var i = 0; i < data.waypoints.length; i++) {
    wp[i] = {'location': new google.maps.LatLng(data.waypoints[i][0], data.waypoints[i][1]), 'stopover': true}
  }

  directionsService.route({
    'origin': data.source,
    'destination': data.destination,
    'waypoints': wp,
    'travelMode': google.maps.DirectionsTravelMode.DRIVING,
    transitOptions: {
      routingPreference: google.maps.TransitRoutePreference.FEWER_TRANSFERS
    },
    optimizeWaypoints: true
  }, function (response, status) {
    if (status === google.maps.DirectionsStatus.OK) {
      directionsDisplay.setDirections(response);
    } else {
      alert('Could not display directions due to: ' + status);
    }
  });
}

function setMap(a_map, zoom, scrollWheel) {
  var map = new google.maps.Map(a_map, {zoom: zoom, scrollwheel: scrollWheel, center: {lat: 12.9287258, lng: 77.6267284}});
  directionsService = new google.maps.DirectionsService;
  directionsDisplay = new google.maps.DirectionsRenderer({
    draggable: false,
    map: map
  });
  setroute_and_show_distance(a_map);
}

var CabPoolListenerPassenger = {
  addListeners: function () {
    var select_tag = $('div.newPassengerInputTemplate').html();
    $('div.newPassengerInputTemplate').remove();

    $('div.passengersForm > select').each(function () {
      $(this).attr('name', 'passengers[' + $.now() + ']');
      $(this).selectize();
    });

    hideAddPassengerButtonIfLimitExceeds($('div.passengersForm').length);

    function hideAddPassengerButtonIfLimitExceeds(number_of_people, limit) {
      if (number_of_people == 4) {
        $('#addPassenger').hide();
        $('.label-name').text('Passenger limit exceeded, cannot add more.');
      }
    }

    $('#addPassenger').click(function () {
      var number_of_people = $('div.passengersForm').length;
      if (number_of_people <= 3) {
        var passenger_form_with_remove_icon = '<div class="form-group"> ' +
            '<div class="passengersForm">' + select_tag + '</div> ' +
            '<button id="removePassenger">-</button>' +
            '</div>';
        $('div#passengersSelection').append(passenger_form_with_remove_icon);
        var select_the_last_passenger_form = $('div.passengersForm:last > select');
        select_the_last_passenger_form.attr('name', 'passengers[' + $.now() + ']');
        select_the_last_passenger_form.selectize();

        hideAddPassengerButtonIfLimitExceeds($('div.passengersForm').length);
      }
      return false;
    });

    $('#passengersSelection').on('click', '#removePassenger', function () {
      $(this).closest('.form-group').remove();
      var number_of_passenger_forms = $("div.passengersForm").length;
      if (number_of_passenger_forms <= 3 && $('#addPassenger').is(':hidden')) {
        $('#addPassenger').show();
        $('.label-name').text('Add a passenger');
      }
      return false;
    });
  }
};
